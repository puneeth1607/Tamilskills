package com.tamilskill.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.tamilskill.security.jwt.AuthEntryPointJwt;
import com.tamilskill.security.jwt.AuthTokanFilter;
import com.tamilskill.security.services.UserDetailsServicesImp;

@Configuration
@EnableMethodSecurity
public class WebSecurityConfig {
    
	@Autowired
	private UserDetailsServicesImp UserDetailsServiceImpl;
	@Autowired
	private AuthEntryPointJwt unauthorizedHandler;
	
	@Bean
	public AuthTokanFilter authenticationJwtTokenFilter() {
		return new AuthTokanFilter();
	}
	
	@Bean
	public DaoAuthenticationProvider authonticationProvider() {
		DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();
		
		authenticationProvider.setUserDetailsService(UserDetailsServiceImpl);
		
		authenticationProvider.setPasswordEncoder(passwordEncoder());
		
		return authenticationProvider;
	}
	
	@Bean
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
	
	
	@Bean AuthenticationManager  authenticationManager(AuthenticationConfiguration authConfig) throws Exception{
		return authConfig.getAuthenticationManager();
	}
}
